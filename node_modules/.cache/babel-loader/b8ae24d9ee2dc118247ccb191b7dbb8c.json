{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eugig\\\\OneDrive\\\\Documentos\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, \n// la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo \n// y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, \n// stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nexport default function Item() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["Item"],"sources":["C:/Users/eugig/OneDrive/Documentos/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["// El componente Item no tiene componentes hijos.\r\n\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, \r\n// la misma se la defina el padre a la hora de crearlo.\r\n\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo \r\n// y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, \r\n// stock y el métodos heredados para su uso.\r\n\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item() {\r\n\r\n  return (\r\n    <div className='producto'>\r\n      <h3></h3>\r\n      <p></p>\r\n      <h5></h5>\r\n      <button></button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,IAAT,GAAgB;EAE7B,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;KAVuBA,I"},"metadata":{},"sourceType":"module"}